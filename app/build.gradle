buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}


android {
    def fabricApiKey = ""
    def googleMapsApiKeyDevelop = ""
    def googleMapsApiKeyStore = ""

    Properties props = new Properties()
    def propFile = file('../signing.properties')
    if (propFile.canRead() && props != null){
        props.load(new FileInputStream(propFile))
        if (props.containsKey('FABRIC_API_KEY')) {
            fabricApiKey = file(props['FABRIC_API_KEY'])
        }
        if (props.containsKey('GOOGLE_MAPS_API_KEY_DEVELOP')) {
            googleMapsApiKeyDevelop = file(props['GOOGLE_MAPS_API_KEY_DEVELOP'])
        }
        if (props.containsKey('GOOGLE_MAPS_API_KEY_STORE')) {
            googleMapsApiKeyStore = file(props['GOOGLE_MAPS_API_KEY_STORE'])
        }
    }

    compileSdkVersion appCompileSdk
    buildToolsVersion '28.0.3'
    defaultConfig {
        multiDexEnabled true
        applicationId "de.p72b.mocklation"
        minSdkVersion appMinSdk
        targetSdkVersion 29
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [ fabricApiKey:fabricApiKey]
        buildConfigField "String", "SUPPORT_LIB_VERSION", '"' + supportLibVersion + '"'
        buildConfigField "String", "ROOM_VERSION", '"' + rootProject.roomVersion + '"'
        buildConfigField "String", "PLAY_SERVICES_VERSION", '"' + playServicesVersion + '"'
        buildConfigField "String", "MAP_UTILITIES_VERSION", '"' + mapsUtilsVersion + '"'
        buildConfigField "String", "GSON_VERSION", '"' + gsonVersion + '"'
        buildConfigField "String", "DAGGER_VERSION", '"' + daggerVersion + '"'
        buildConfigField "String", "FIREBASE_VERSION", '"' + firebaseVersion + '"'
        buildConfigField "String", "RX_JAVA_VERSION", '"' + rxjavaVersion + '"'
        buildConfigField "String", "RX_ANDROID_VERSION", '"' + rxandroidVersion + '"'
    }

    signingConfigs {
        release {
            storeFile file('../mocklation-release-key.keystore')
            storePassword ' '
            keyAlias "mocklation"
            keyPassword ' '
        }
        debug {
            storeFile file('../mocklation-debug-key.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    flavorDimensions "default"

    productFlavors {
        develop {
            dimension "default"
            applicationId "de.p72b.mocklation.develop"
            versionCode appVersionCode
            versionName "${appVersionName} develop"

            resValue "string", "google_maps_api_key", googleMapsApiKeyDevelop
        }
        store {
            dimension "default"
            applicationId "de.p72b.mocklation"
            versionCode appVersionCode
            versionName appVersionName

            resValue "string", "google_maps_api_key", googleMapsApiKeyStore
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api "com.android.support:appcompat-v7:${supportLibVersion}"
    api "com.android.support:cardview-v7:${supportLibVersion}"
    api "com.android.support:design:${supportLibVersion}"
    api "com.android.support:support-dynamic-animation:${supportLibVersion}"
    api "com.android.support:customtabs:${supportLibVersion}"
    api "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    api "android.arch.persistence.room:rxjava2:$rootProject.roomVersion"
    api "com.google.android.gms:play-services-maps:${playServicesVersion}"
    api "com.google.android.gms:play-services-places:${playServicesVersion}"
    api "com.google.android.gms:play-services-location:${playServicesVersion}"
    api "com.google.maps.android:android-maps-utils:${mapsUtilsVersion}"
    api "com.google.code.gson:gson:${gsonVersion}"
    api "com.google.dagger:dagger:${daggerVersion}"
    api "com.google.firebase:firebase-core:${firebaseVersion}"
    api 'com.google.firebase:firebase-config:16.1.0'
    annotationProcessor rootProject.ext.daggerCompiler
    api "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
    api "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"
    api('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'ru.bullyboo.ecryption:encoder:1.0.3'
}
apply plugin: 'com.google.gms.google-services'
